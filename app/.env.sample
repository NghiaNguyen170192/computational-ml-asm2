# Bitcoin Price Prediction App - Environment Configuration Sample
# Copy this file to .env and update the values for your environment

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL database connection settings
# These should match your orchestration PostgreSQL setup
DB_HOST=postgres
DB_PORT=5432
DB_NAME=airflow
DB_USER=airflow
DB_PASSWORD=airflow

# =============================================================================
# FLASK APPLICATION CONFIGURATION
# =============================================================================
# Flask application settings
FLASK_APP=app.py
FLASK_ENV=production
FLASK_DEBUG=False

# Secret key for session management (change this in production!)
SECRET_KEY=your-secret-key-here-change-in-production

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
# Application port (default: 5000, mapped to 5000 in docker-compose.yml)
APP_PORT=5000

# Model and data settings
MODEL_DIR=models
LOG_DIR=logs
DATA_DIR=data

# =============================================================================
# MACHINE LEARNING CONFIGURATION
# =============================================================================
# Model training settings
TRAINING_DATA_DAYS=365
PREDICTION_DAYS=7
DRIFT_THRESHOLD=0.1
MIN_SAMPLES_FOR_DRIFT=100
RETRAIN_FREQUENCY_DAYS=7

# Model performance thresholds
RMSE_THRESHOLD=5000.0
MAE_THRESHOLD=3000.0
MAPE_THRESHOLD=0.15

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Logging levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO
ENABLE_FILE_LOGGING=True
ENABLE_CONSOLE_LOGGING=True

# =============================================================================
# NEWS SENTIMENT CONFIGURATION
# =============================================================================
# News analysis settings
NEWS_LOOKBACK_DAYS=30
SENTIMENT_WEIGHT=0.3
IMPACT_WEIGHT=0.2

# Bitcoin keywords for news filtering
BITCOIN_KEYWORDS=bitcoin,btc,cryptocurrency,crypto,blockchain,satoshi

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================
# Docker-specific settings
DOCKER_NETWORK=orchestration_nginx-network
CONTAINER_NAME=bitcoinpredictor

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Security settings
SESSION_TIMEOUT=3600
MAX_LOGIN_ATTEMPTS=5
LOGIN_LOCKOUT_TIME=300

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================
# Health check settings
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_RETRIES=3

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================
# Development-specific settings (set to False in production)
ENABLE_DEBUG_TOOLBAR=False
ENABLE_PROFILING=False
ENABLE_TEST_DATA=False

# =============================================================================
# EXTERNAL API CONFIGURATION (Optional)
# =============================================================================
# External API keys (if needed for additional data sources)
# BINANCE_API_KEY=your-binance-api-key
# NEWS_API_KEY=your-news-api-key
# REDDIT_CLIENT_ID=your-reddit-client-id
# REDDIT_CLIENT_SECRET=your-reddit-client-secret

# =============================================================================
# NOTES
# =============================================================================
# 1. Copy this file to .env: cp .env.sample .env
# 2. Update the values according to your environment
# 3. Never commit .env to version control
# 4. The .env file is loaded by docker-compose.yml
# 5. Database settings should match your orchestration setup
# 6. Change SECRET_KEY in production for security

# =============================================================================
# APPLICATION MANAGEMENT
# =============================================================================
# App management script settings
APP_PORT=5000
